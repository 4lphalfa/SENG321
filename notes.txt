==========
2018-09-06
==========

Not fixing requirements can be expensive

Requirements Engineering is about Expectations Management

Develop skils for
    - analysis and contract negotiation
    - solution seeking in context of customer problem
    - choosing the right requirements technique for particular projects, organizational setting and development process model
    - requirements validation for solution fit



==========
2018-09-10
==========

Latent Knowledge:
    Knowledge that is not readily accessable

Tact Knowledge:
    Knowledge that is readily available, but is considered too obvious to mention

Strategic Considerations to Elicitation
    - What info should be gathered
    - From what sources may it be gleamed
    - By what mechanisms or techniques may it be gathered

Requirements Engineering Process:
    - A description of the problem domain
    - A list of problems requiring solution
    - Any client-imposed constraints upon the behavior or structure of the solution system

Sources of info for Problem Domain
    - Clients
    - Clients' "specifications"
    - Pre-existing solutions and their documentation
    - Users of pre-existing systems
    - Potential users of the new system
    - Predecessor or competitor's products
    - Application (problem) domain experts
    - Documents defining the characteristics and behavior of any interfacing system (terminators)
    - Relevant technical standards and legislation

Elicitation Techniques
    - Background reading
    - Brain storming
    - Discourse analysis
    - Document inspection
    - Ethnography
    - Interviewing
    - Joint Application Design
    - Questionnairs
    - Requirements stripping
    - Sitting with Nellie
    - Task observation
    - Use-case and scenairos

Elicitation Plan Considerations
    - What info should be elicited
    - What sources should be used
    - What mechanisms or techniques should be employed

Info to Elicit
    - The basic type of application
    - The identity of the client
    - The main motivation to the client
    - etc...

Social-political considerations that might interfere with elicitation
    - Fear of redundency
    - Fear of down-sizing
    - Promotion
    - A desire to prove themselves right
    - A desire to maintain power through knowledge
    - Empire building


What is Requirements Engineering
    Set of activities to identify purpose in the context of human activities

If the software doesn't respond how we want, it's not high quality
High quality is hard to measure

Software quality as firness for purpose

Where does RE fint in software development?
    Start early, but we now use iterative design, so RE is revisited frequently

RE requires an ongoing understanding of the problem

Design of software intensive systems: type of a wicked problem:
    - No single formulation of the problem
    - Continuous need for exploration
    - No right or wrong solution
    - Unique characteristics
... Identifying the problem is a problem in itself

Hard vs. Soft Systems
    - Soft systems methods 
        suited for wicked problems
        adopt a Human-centered design view

Requirements Engineering Definition
    RE is a set of activities concerned with identifying and ... - Easterbrook, Ch1

A spectrum of software-intensive systems
    The type of system may determine how requirements are elicited, analyzed, and negotiated

Requirements describe problems
    Requirements
        describe the problem statements
        and
        activites to be supported by the system
    Ideal: separate the problem from solutions
    Practice: very difficult to accomplish

Figure 3 (Easterbrook Ch2): Twin peaks model

Application domain vs. Machine domain (Jackson, The meaning of requirements, 1977)

Example - problem and req vs solution statement
    Context: Design a secure means (software, i.e. the machine) to store data
    Example of a requirements (for the machine): prevent access to unauthorized personnel:
    Example of Domain property: only a manager can assign access authority
    Specification for the machine: when the user enters a valid password, the computer will unlock the door (or the system requires a login and password for access")
    
Problem
Specification
Solution

RE processes
    - Elicitation
    - Analysis
    - Specification
    - Validation and verification
    - Negotiation
    - Management

Do not talk about solutions when eliciting info about the client's problem


Interviews

Distinguish between wants, needs, and wishes
    Try to get the needs

Main Elicitation Techniques
    - Background reading / inspection of documents
    - Interviews
    - Questionnaires
    - Observations
    - Group techniques (JAD, focus groups)
    - Contextual design (Combine interviews and observations)
    - Newer methods:
        * StakeSource
        * Data mining

Interviews
    - Most widely used technique in requirements engineering
    - Analysts interview future users of the system individually to find out
        - What the present system does
        - What changes are needed
    - The info gathered during the interviews enables the analysts to design a new system that will eliminate the shortcomings of the current one.

    Advantages
        - Access to individual stakeholders and their opinions
        - Rich collection of info
        - Ability to adapt questions to particualr situations
    
    Disadvantages
        - Info from multiple sources, hard to analyze
        - Difficult to be a skilled interviewer
        - May intimidate the interviewee

    5 Steps of an interview:
        Preparing for the interview
        Planning and scheduling the interview
        Opening and closing the interview
        Conducting the interview
        Following up for clairification

    Types of interviews:
        Structured
        Unstructured (let's explore the situation)

    Try to avoid using the words: problems, better


Request for Proposal (RFP)
    


By Thurs
    2 min presentation
        What company
        Interview or when the interview is scheduled

By Tues
    Finish interview and...







==========
2018-09-13
==========

What are Requirements?

What is a Requirement?: Describe the problem statements and activities to be supported by they system
    The what vs the solution (the how)

Ex Distinction between a problem statement and a solution statement

The problem domain and the requirements
    Problem domain: The part of the universe within which the problems exist
    The Problem: 
        A control system is needed that will make more efficient use of the lifts in the building
    The Requirements: the effects that the client wishes to be brought about in the problem domain
        ex a lift will only reverse direction when stopped at a floor, the lift will not stop when going down from one floor to the next

Requirements, domain property and the specification
    Requirements: 
    Domain properties: When a lift is within 20cm vertically of the sensor's nominal position the sensor sends a hi signal otherwise a low signal
    Specification: 

Types of requirements
    fucntion of the system is most likely a part of the system

Types of requirements
    Functionality
    Quality assurance
    Security
    Physical Environment
    Interfaces
    Users and human factors
    Documentation
    Data
    Resources
    Design constraints (ex language, archetecture)
    




==========
2018-09-17
==========

(Survey the population by questionnaires or interviews)

Elicitation Techniques
    Questionnaires
        Gather info by neans of a survey
        - Reach a large pool of people
        - Uniform questions
        - location doesn't matter
        - Difficult to contextualize, context is missing
        - Difficult to design well
    Observations
        Takes the analyst in the working context
        - Able to collect contextual information
        - Difficult to obtain access to the customer site
        - Time consuming
        - Does not collect personal opinions
        - Easy to "go native" and think like the population you are observing
    Contextual Inquiry
        A field of intervieing technique aimed at revealing work structure. Field Interview technique.
        - Observe
        - Interview
        - Develop a shared understanding
        - Direct the inquiry from a clear understanding of your own purpose

In the absence of appropriate communication techniques...
    Technical Power (by developers)
        - doesn't allow users to make their own observations
    Structural Power (by customers)
        - defining project tasks
    Conceptual Power (by customers and developers)


Industry Panel - Requirements in the Wild
    Emma 
    Zaine
    Colin
    Jorin

    What role does RE play in company practices?
        Emma
            In a startup the requirements were crazy
            Don't have all requirements at the start
            Ability to adapt to changes
        Zaine
            Startup
            Large company didn't have many requirements
        Colin
            Large sotware company that wasn't always large
            Clent drivin
            Market team driven
            Writing requirements for themselves
    What worked well in terms of managing requirements
        Emma
            Communication
            Scrums/frequent meetings with clients
        Colin
            Well rounded teams
            Communication within the team
            You might not know who the client is
            Understand what you're trying to build/accomplish
        Zaine
            Requirements are like a contract
            Understand what the clents need, and what they're paying for
    How to react to changes in requirements
        Colin
            Negotiation
        Emma
            Happens frequently in smaller companies
            Depends on deadlines
            From a managements perspective, have a general baseline before starting a project
    Explaining that features are not possible
        Emma
            Hopefully it's not your responsibility
            Management should be doing if for you
            Stand your ground and a Buisness Analysist/Project Manager
    Formal requirements change process?
        Emma
            Shred Excel to keep track of the change request
            Communication with development team for time estimate
            Increase it by 50%
        Colin
            Management's decision
            Double estimate
            Small changes might be bigger than expected
            Always give yourself more time
        Zaine
            Approval process takes much longer than development
            Give a bigger estimate
    What happens if you can't speak to the stakeholders often
        Emma
            When you're working on huge projects, requirements phase can take a year+
            Set the requirements very clearly at the start of the projects
    What can we practice in class
        Colin
            Learn how to write things that aren't ambiguous
            Break a feature down
            Prototype
            Understand what the feature is
        Zaine
            Make it clear
            Don't make it too wordy






==========
2018-09-20
==========

Barnga - a cultural game


Time and Team Management

Effective Time Management
    Watch Randy Pausch's 'Time Management' lecture
        also 'Last Lecture'
    Time is a resource 
    Parkinson's Law: The work allocated to a task fills the time allocated to it
    In your project:
        Plan your activities
        Time box your activities
            Always build in contingency (add 25% or double the time)
        Reflect on your estimates/progress relative to capabilities

Effective Team Management
    Comprises a wide variety of skills, personalities, and experiences
    Effective teams are driven by a goal, fuelled by an identy, reflective
    Forming, norming, storming, performing
    In your project:
        Discuss your strengths, work habits, time management skills
        Distribute work and yet ways to integrate work
            Everyone should learn from each deliverable
        Open communication channels
        Regular checkups with team
        Reflect on estimaes/progress relative to capabilities
    Effective Team Member: driven by the team's goal, fulled by attitude, gives befroe asks
    In your project:
        Be a linchpin
        Learn from others
        Consider how you can help the team first


Group Techniques in RE
    Recognition of the need for a high degree of user involvement in system design

Elicitation Techniques
Group Techniques
    Advantages
        - Bring stakeholders together
        - More informal interaction that interviews
    Disadvantages
        - More difficult to deal with groups, needs train facilitator
        - Risk of groupthink

Group techniques for elicitation
    - Focus groups
    - Brainstorming
    - JAD (Joint Application Design)
    - Also referred to as Requirements Workshop
    Characteristics
        - Communication between group members
        - Sharing of information
        - Sharing of workspace
        - Coordination and control of shared objects
        - Decision making
        - Common understanding of the work progress
        - Facilitation

JAD
    Structured agenda, visual aids, a facilitator

Workshops and facilitation
    Balances the needs of content, process, and people





==========
2018-09-24
==========

RE Activities and the Software Process

Re process (revisited)
    Elicitation
        What info should be gathered
        From what sources can it be gathered
        What techniques may it be gathered
    Analysis
        Understanding the problem domain
        Goal: produce the requirements document
            accurate description of what the solution will do (not a specification)
    Specification
        Define the behaviour of the system
        Internal and external design
            External: typical software design
            Internal: defining how the solution is going to work, not how the software is going to work
    Validation and Verification
        What's the difference
            Valadation: are we building the right product
                if you don't do it at the beginning, it snowballs and you might have to undo months of work
            Verification: are we building the product right (is it working)
    Negotiation
        Ensure expectations are consistent for both sides
    Management
        Adhere to the requirements (or establish a process to allow for change)
        Traceability: we have are requirement, through the entire software process, you want to trace something to the initial requirements
            We have coverage for all of our requirements

The problem of requrements
    no right or wrong way to do it

RE process and documentation
    
Where does RE fit in Software Development
    BDUF (Big Design Up Front)
        Critical systems (pacemakers, self driving cars) 
    It can go anywhere, but usually at the beginning
    Prototyping
        very good at figuring out scope
        if you write code, DO NOT USE IT in the actual solution

Towards processes that mitigate project risks
    Continuous access to stakeholders
    Incremental and iterative software development approaches






